{"version":3,"sources":["context/userContext.js","images/icons/spotifyIcon.png","pages/home/home.js","pages/callback/callback.js","components/signInModal/signInModal.js","components/navbar/myNavbar.js","routes/routes.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","UserContextProvider","props","useState","name","email","image","accessToken","isLoggedIn","user","setUser","Provider","value","children","Home","useContext","topArtists","setTopArtist","topTracks","setTopTracks","useEffect","a","axios","get","headers","Authorization","artistsReponse","trackResponse","data","items","fetchData","Container","className","Jumbotron","fluid","Row","Col","sm","Image","src","CardDeck","map","artist","Card","Img","images","url","Body","Title","Link","target","href","external_urls","spotify","tracks","album","artists","preview_url","controls","preload","width","height","SpotifyIcon","Callback","redirect","setRedirect","URLSearchParams","window","location","hash","replace","then","response","display_name","catch","error","console","log","alert","to","SignInModal","Modal","show","onHide","size","aria-labelledby","centered","Header","closeButton","id","Footer","Button","onClick","MyNavbar","modalShow","setModalShow","Navbar","bg","expand","Brand","alt","Toggle","aria-controls","Collapse","Nav","variant","process","signIn","Routes","basename","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf0c497f.chunk.js","sourcesContent":["import { React, useState, createContext } from \"react\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const UserContextProvider = (props) => {\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    image: \"\",\r\n    accessToken: \"\",\r\n    isLoggedIn: false,\r\n  });\r\n\r\n  return (\r\n    <UserContext.Provider value={[user, setUser]}>\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/spotifyIcon.cd66b8f6.png\";","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  Jumbotron,\r\n  Card,\r\n  CardDeck,\r\n} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\n// Context\r\nimport { UserContext } from \"../../context/userContext\";\r\n\r\n// Images\r\nimport SpotifyIcon from \"../../images/icons/spotifyIcon.png\";\r\n\r\nconst Home = () => {\r\n  const [user] = useContext(UserContext);\r\n  const [topArtists, setTopArtist] = useState([]);\r\n  const [topTracks, setTopTracks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!user.isLoggedIn) {\r\n      return;\r\n    }\r\n\r\n    const fetchData = async () => {\r\n      const artistsReponse = await axios.get(\r\n        \"https://api.spotify.com/v1/me/top/artists?limit=5\",\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user.accessToken}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      const trackResponse = await axios.get(\r\n        \"https://api.spotify.com/v1/me/top/tracks?limit=5\",\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user.accessToken}`,\r\n          },\r\n        }\r\n      );\r\n      setTopArtist(artistsReponse.data.items);\r\n      setTopTracks(trackResponse.data.items);\r\n    };\r\n    fetchData();\r\n  }, [user]);\r\n\r\n  const userNotSignedIn = () => {\r\n    return (\r\n      <>\r\n        <Jumbotron>\r\n          <Row className=\"text-center align-items-center\">\r\n            <Col>\r\n              <h1>Please Login to Spotify</h1>\r\n            </Col>\r\n            <Col>\r\n              <Image width=\"50%\" height=\"50%\" fluid src={SpotifyIcon} />\r\n            </Col>\r\n          </Row>\r\n        </Jumbotron>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const userSignedIn = () => {\r\n    return (\r\n      <>\r\n        <Jumbotron fluid>\r\n          <Row>\r\n            <Col sm={6} className=\"text-center\">\r\n              <Image src={user.image} fluid />\r\n            </Col>\r\n            <Col sm={6} className=\"text-center\">\r\n              <h1>Welcome</h1>\r\n              <h2>{user.name}</h2>\r\n            </Col>\r\n          </Row>\r\n        </Jumbotron>\r\n        <h1>Favorite Artists</h1>\r\n        <CardDeck>\r\n          {topArtists.map((artist) => {\r\n            return (\r\n              <Card>\r\n                <Card.Img src={artist.images[0].url} />\r\n                <Card.Body>\r\n                  <Card.Title>{artist.name}</Card.Title>\r\n                  <Card.Link\r\n                    target=\"_blank\"\r\n                    href={artist.external_urls.spotify}\r\n                  >\r\n                    Open on Spotify\r\n                  </Card.Link>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardDeck>\r\n        <h1 className=\"mt-5\">Favorite Tracks</h1>\r\n        <CardDeck>\r\n          {topTracks.map((tracks) => {\r\n            return (\r\n              <Card>\r\n                <Card.Img src={tracks.album.images[0].url} />\r\n                <Card.Body>\r\n                  <Card.Title>Artist: {tracks.artists[0].name}</Card.Title>\r\n                </Card.Body>\r\n                <Card.Body>\r\n                  <Card.Title>Album: {tracks.album.name}</Card.Title>\r\n                </Card.Body>\r\n                <Card.Body>\r\n                  <Card.Title>Track: {tracks.name}</Card.Title>\r\n                </Card.Body>\r\n                <Card.Body>\r\n                  <Row>\r\n                    <audio\r\n                      src={tracks.preview_url}\r\n                      controls\r\n                      preload=\"auto\"\r\n                    ></audio>\r\n                  </Row>\r\n                </Card.Body>\r\n                <Card.Body>\r\n                  <Card.Link\r\n                    target=\"_blank\"\r\n                    href={tracks.external_urls.spotify}\r\n                  >\r\n                    Open on Spotify\r\n                  </Card.Link>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardDeck>\r\n        <br className=\"mt-5\" />\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"mt-5\">\r\n        {user.isLoggedIn ? userSignedIn() : userNotSignedIn()}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Callback = () => {\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [redirect, setRedirect] = useState(false);\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(\r\n      window.location.hash.replace(\"#\", \"?\")\r\n    );\r\n    const accessToken = urlParams.get(\"access_token\");\r\n\r\n    if (accessToken === null) {\r\n      alert(\"User denied login\");\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .get(\"https://api.spotify.com/v1/me\", {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        setUser({\r\n          ...user,\r\n          name: response.data.display_name,\r\n          email: response.data.email,\r\n          image: response.data.images[0].url,\r\n          accessToken: accessToken,\r\n          isLoggedIn: true,\r\n        });\r\n        setRedirect(true);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, [user, setUser]);\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default Callback;\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst SignInModal = (props) => {\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      onHide={props.onHide}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Modal heading\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <h4>Centered Modal</h4>\r\n        <p>\r\n          Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n          dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\r\n          consectetur ac, vestibulum at eros.\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SignInModal;\r\n","import { React, useContext, useState } from \"react\";\r\nimport { Navbar, Nav, Button } from \"react-bootstrap\";\r\nimport SpotifyIcon from \"../../images/icons/spotifyIcon.png\";\r\nimport \"./navbar.css\";\r\n\r\n// My Components\r\nimport SignInModal from \"../signInModal/signInModal\";\r\n\r\n// Context\r\nimport { UserContext } from \"../../context/userContext\";\r\n\r\nconst MyNavbar = () => {\r\n  const signIn = () => {\r\n    let clientId = process.env.REACT_APP_SPOTIFY_CLIENT_ID;\r\n    let redirectUrl = process.env.REACT_APP_SPOTIFY_REDIRECT_URL;\r\n    let url = `https://accounts.spotify.com/authorize?client_id=${clientId}&redirect_uri=${redirectUrl}&scope=user-read-private%20user-read-email%20playlist-read-collaborative%20user-follow-read%20user-top-read&response_type=token&state=123`;\r\n    window.location.replace(url);\r\n  };\r\n\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [user] = useContext(UserContext);\r\n\r\n  return (\r\n    <div>\r\n      <SignInModal show={modalShow} onHide={() => setModalShow(false)} />\r\n      <Navbar className=\"navbar-dark\" bg=\"dark\" expand=\"lg\">\r\n        <Navbar.Brand href=\"#home\">\r\n          <img\r\n            alt=\"\"\r\n            src={SpotifyIcon}\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n          />{\" \"}\r\n          Spotify Stats\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link\r\n              target=\"_blank\"\r\n              href=\"https://github.com/RorroRojas3/React-Spotify-Status\"\r\n            >\r\n              Github\r\n            </Nav.Link>\r\n          </Nav>\r\n          {!user.isLoggedIn && (\r\n            <Button variant=\"dark\" onClick={() => signIn()}>\r\n              Sign In\r\n            </Button>\r\n          )}\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyNavbar;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// My components\r\nimport Home from \"../pages/home/home\";\r\nimport Callback from \"../pages/callback/callback\";\r\nimport MyNavbar from \"../components/navbar/myNavbar\";\r\n\r\n// Context\r\nimport { UserContextProvider } from \"../context/userContext\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <div>\r\n      <UserContextProvider>\r\n        <MyNavbar />\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/callback\">\r\n              <Callback />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </UserContextProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","// My components\r\nimport Routes from \"./routes/routes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Routes />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}